<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MSL.controls">
    <Style x:Key="MagicBorder" TargetType="Border">
        <Setter Property="Margin" Value="10,10,10,0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BorderBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <Style x:Key="BorderTitle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>
    
    <Style x:Key="ListItemSideMenu" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Width="22" Height="22" HorizontalAlignment="Left"/>
                        <TextBlock Text="{Binding Text}" Foreground="{DynamicResource PrimaryTextBrush}" Margin="10,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border" CornerRadius="5" Margin="5" Height="38" Background="{DynamicResource SideMenuItemBrush}">
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Fill="{DynamicResource SideMenuItemBrush}" RadiusX="5" RadiusY="5" HorizontalAlignment="Left" Width="3" Height="24" x:Name="Rect"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" ContentSource="Content"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Rect" Storyboard.TargetProperty="Fill.Color" To="Gray" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" To="Gray" Duration="0:0:0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).Opacity" Duration="0:0:0.1" To="0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Rect" Storyboard.TargetProperty="Fill.Color" Duration="0:0:0.5"/>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).Opacity" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource DarkPrimaryBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BorderBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TabItemSideMenu" TargetType="{x:Type TabItem}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Icon}" Width="22" Height="22" HorizontalAlignment="Left"/>
                        <TextBlock Text="{Binding Text}" Foreground="{DynamicResource PrimaryTextBrush}" Margin="10,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" Margin="5" Height="38" Background="{DynamicResource SideMenuItemBrush}" CornerRadius="5">
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Fill="{DynamicResource SideMenuItemBrush}" RadiusX="5" RadiusY="5" HorizontalAlignment="Left" Width="3" Height="24" x:Name="Rect"/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" ContentSource="Header"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource DarkPrimaryBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BorderBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TabControlSideMenu" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TabPanel Grid.Column="0" Background="{DynamicResource SideMenuBrush}" IsItemsHost="True"/>
                        <Rectangle Grid.Column="0" HorizontalAlignment="Right" Fill="{DynamicResource BorderBrush}" Width="1"/>
                        <ContentPresenter Grid.Column="1" ContentSource="SelectedContent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="UserControlTemplate" TargetType="UserControl">
        <ContentPresenter x:Name="contentPresenter" RenderTransformOrigin="0.5,0.5">
            <ContentPresenter.RenderTransform>
                <ScaleTransform/>
            </ContentPresenter.RenderTransform>
            <ContentPresenter.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard Storyboard="{StaticResource ShowUserControl}"/>
                </EventTrigger>
            </ContentPresenter.Triggers>
        </ContentPresenter>
    </ControlTemplate>

    <Style TargetType="{x:Type local:MagicCard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MagicCard}">
                    <Border Margin="{TemplateBinding MarginOverride}" Padding="10" CornerRadius="7" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource BorderBackground}" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Label with DataTrigger to adjust height when content is empty -->
                            <Label x:Name="TitleLabel" Content="{TemplateBinding Title}" Grid.Row="0">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="FontSize" Value="18"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="Background" Value="{x:Null}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="0,0,0,10"/>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>