<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <Style x:Key="MagicBorder" TargetType="Border">
        <Setter Property="Margin" Value="10,10,10,0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BorderBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="BorderTitle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="3"/>
    </Style>
    <ControlTemplate x:Key="SideMenuTemplate" TargetType="{x:Type ListBoxItem}">
        <Border CornerRadius="5" Background="{DynamicResource SideMenuItemBrush}" x:Name="Border">
            <Grid>
                <Rectangle Fill="{DynamicResource SideMenuItemBrush}" RadiusX="5" RadiusY="5" HorizontalAlignment="Left" Width="3" Height="24" x:Name="Rect"/>
                <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Rect" Storyboard.TargetProperty="Fill.Color" To="Gray" Duration="0:0:0.2"/>
                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" To="Gray" Duration="0:0:0.0"/>
                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).Opacity" Duration="0:0:0.1" To="0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Rect" Storyboard.TargetProperty="Fill.Color" Duration="0:0:0.5"/>
                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.5"/>
                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).Opacity" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource PrimaryBrush}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource BorderBackground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>